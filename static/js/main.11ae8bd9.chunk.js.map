{"version":3,"sources":["components/contactList/contactListItem.module.css","components/contactFilter/contactFilter.module.css","components/contactList/contactList.module.css","app.module.css","components/alert/alert.module.css","transitions/slideLogo.module.css","components/logo/logo.module.css","redux/actionType.js","components/contactForm/contactForm.js","redux/containers/contactFormContainer.js","redux/action.js","components/contactFilter/contactFilter.js","redux/containers/contactFilterContainer.js","components/contactList/contactListItem.js","components/contactList/contactList.js","redux/containers/contactListContainer.js","components/alert/alert.js","components/logo/logo.js","App.js","redux/store..js","redux/contactReducer.js","index.js","components/contactForm/contactForm.module.css","transitions/slide.module.css"],"names":["module","exports","Type","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","className","styles","form","onSubmit","label","input","type","onChange","pattern","placeholder","submit","Component","connect","dispatch","contact","payload","id","Date","now","actions","ContactFilter","changeFilter","CSSTransition","timeout","classNames","slideTransition","filter","findContacts","findContactInput","event","ContactListItem","deleteContact","flexContainer","contactText","delete","onClick","ContactList","contacts","TransitionGroup","component","contactList","map","key","unmountOnExit","contactListItem","Alert","alert","alertText","Logo","title","isMounted","in","phonebook","App","container","contactForm","rootReducer","combineReducers","action","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11ae8bd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexContainer\":\"contactListItem_flexContainer__3rfu5\",\"contact\":\"contactListItem_contact__2XBra\",\"contactText\":\"contactListItem_contactText__2jgCP\",\"delete\":\"contactListItem_delete__2uput\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"contactFilter_filter__3bvwY\",\"findContacts\":\"contactFilter_findContacts__3NIew\",\"findContactInput\":\"contactFilter_findContactInput__2O4Qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__2yBfA\",\"contactListItem\":\"contactList_contactListItem__3WoKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\",\"contactForm\":\"app_contactForm__1GQDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__31now\",\"alertText\":\"alert_alertText__27z1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideLogo_enter__EmpV4\",\"enterActive\":\"slideLogo_enterActive__2EhFw\",\"exit\":\"slideLogo_exit__kMQ8F\",\"exitActive\":\"slideLogo_exitActive__2xaqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"logo_phonebook__RSAT5\"};","const Type = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  FILTER_CONTACT: 'FILTER_CONTACT',\n};\nexport default Type;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './contactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input className={styles.input} type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            name=\"number\"\n            placeholder=\"000-00-00\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.submit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport * as actions from '../action';\nimport ContactForm from '../../components/contactForm/contactForm';\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: contact => dispatch(actions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import Type from './actionType';\n\nexport const addContact = contact => ({\n  type: Type.ADD_CONTACT,\n  payload: {\n    id: Date.now(),\n    contact,\n  },\n});\nexport const deleteContact = id => ({\n  type: Type.DELETE_CONTACT,\n  payload: {\n    id,\n  },\n});\nexport const filterContact = filter => ({\n  type: Type.FILTER_CONTACT,\n  payload: { filter },\n});\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport styles from './contactFilter.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactFilter = ({ changeFilter, value }) => (\n  <CSSTransition timeout={250} classNames={slideTransition}>\n    <div className={styles.filter}>\n      <label className={styles.findContacts}>\n        Find contacts by name\n        <input className={styles.findContactInput} onChange={changeFilter} value={value} type=\"text\" name=\"search\" />\n      </label>\n    </div>\n  </CSSTransition>\n);\n\nContactFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default ContactFilter;\n","import { connect } from 'react-redux';\nimport * as action from '../action';\n\nimport ContactFilter from '../../components/contactFilter/contactFilter';\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: event => dispatch(action.filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './contactListItem.module.css';\n\nconst ContactListItem = ({ contact, deleteContact }) => (\n  <div className={styles.flexContainer}>\n    <div className={styles.contact}>\n      <p className={styles.contactText}>{contact.name} </p>\n      <p className={styles.contactText}>{contact.number}</p>\n    </div>\n    <button className={styles.delete} onClick={deleteContact} type=\"button\" />\n  </div>\n);\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './contactListItem';\nimport styles from './contactList.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <>\n    {/* {contacts.length > 0 && ( */}\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\n      {contacts &&\n        contacts.map(contact => (\n          <CSSTransition key={contact.id} timeout={250} unmountOnExit classNames={slideTransition}>\n            <li className={styles.contactListItem} key={contact.id}>\n              <ContactListItem deleteContact={() => deleteContact(contact.id)} contact={contact.contact} />\n            </li>\n          </CSSTransition>\n        ))}\n    </TransitionGroup>\n    {/* )} */}\n  </>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.number.isRequired })).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport * as actions from '../action';\nimport ContactList from '../../components/contactList/contactList';\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../transitions/slide.module.css';\nimport styles from './alert.module.css';\n\nconst Alert = () => (\n  <CSSTransition timeout={250} classNames={slideTransition}>\n    <div className={styles.alert}>\n      <p className={styles.alertText}>Already in the contact list</p>\n    </div>\n  </CSSTransition>\n);\n\nexport default Alert;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport slideTransition from '../../transitions/slideLogo.module.css';\nimport styles from './logo.module.css';\n\nconst Logo = ({ title, isMounted }) => (\n  <CSSTransition in={isMounted} timeout={500} classNames={slideTransition}>\n    <h1 className={styles.phonebook}>{title}</h1>\n  </CSSTransition>\n);\nLogo.propTypes = {\n  title: PropTypes.string.isRequired,\n  isMounted: PropTypes.bool.isRequired,\n};\nexport default Logo;\n","import React, { Component } from 'react';\nimport ContactForm from './redux/containers/contactFormContainer';\nimport ContactFilter from './redux/containers/contactFilterContainer';\nimport ContactList from './redux/containers/contactListContainer';\nimport styles from './app.module.css';\nimport Alert from './components/alert/alert';\nimport Logo from './components/logo/logo';\n\nexport default class App extends Component {\n  state = {\n    isMounted: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true,\n    });\n  }\n\n  render() {\n    const { isMounted } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.contactForm}>\n          <Logo title=\"Phonebook\" isMounted={isMounted} />\n          <ContactForm />\n        </div>\n        <div>\n          <div>\n            <ContactFilter />\n            <ContactList />\n          </div>\n          <Alert />\n        </div>\n      </div>\n    );\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { contactReducer, filterReducer } from './contactReducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\nconst store = createStore(rootReducer, devToolsEnhancer());\nexport default store;\n","import Type from './actionType';\n\nexport const contactReducer = (state = [], action) => {\n  switch (action.type) {\n    case Type.ADD_CONTACT:\n      return [...state, action.payload];\n    case Type.DELETE_CONTACT:\n      return state.filter(contact => contact.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\nexport const filterReducer = (state = '', action) => {\n  switch (action.type) {\n    case Type.FILTER_CONTACT:\n      return action.payload.filter;\n    // return state.filter(contact => contact.name.toLowerCase().includes(action.payload.filter.toLowerCase()));\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store.';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__YedcG\",\"label\":\"contactForm_label__1lxmi\",\"input\":\"contactForm_input__2KXel\",\"submit\":\"contactForm_submit__odTCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\"};"],"sourceRoot":""}